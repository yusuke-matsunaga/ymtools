#ifndef YMTOOLS_H
#define YMTOOLS_H

/// @file YmTools.h
/// @brief YmTools のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2014 Yusuke Matsunaga
/// All rights reserved.


//////////////////////////////////////////////////////////////////////
// ymtools 用の設定
//////////////////////////////////////////////////////////////////////

/// @brief プロジェクトの major バージョン
#define YMTOOLS_VERSION_MAJIR @YMTOOLS_VERSION_MAJOR@

/// @brief プロジェクトの minor バージョン
#define YMTOOLS_VERSION_MINOR @YMTOOLS_VERSION_MINOR@

/// @brief プロジェクトのバージョン
#define YMTOOLS_VERSION @YMTOOLS_VERSION@

/// @brief プロジェクトの名前空間
#define YMTOOLS_NAMESPACE @YMTOOLS_NAMESPACE@


//////////////////////////////////////////////////////////////////////
// システム検査の結果
//////////////////////////////////////////////////////////////////////

// <stdlib.h> が存在する時定義されるマクロ
#cmakedefine HAVE_STDLIB_H

// <string.h> が存在する時定義されるマクロ
#cmakedefine HAVE_STRING_H

// <strings.h> が存在する時定義されるマクロ
#cmakedefine HAVE_STRINGS_H

// <unistd.h> が存在する時定義されるマクロ
#cmakedefine HAVE_UNISTD_H

// <limits.h> が存在する時定義されるマクロ
#cmakedefine HAVE_LIMITS_H

// <float.h> が存在する時定義されるマクロ
#cmakedefine HAVE_FLOAT_H

// <math.h> が存在する時定義されるマクロ
#cmakedefine HAVE_MATH_H

// <sys/time.h> が存在する時定義されるマクロ
#cmakedefine HAVE_SYS_TIME_H

// <time.h> が存在する時定義されるマクロ
#cmakedefine HAVE_TIME_H

// <sys/stat.h> が存在する時定義されるマクロ
#cmakedefine HAVE_SYS_STAT_H

// <pwd.h> が存在する時定義されるマクロ
#cmakedefine HAVE_PWD_H

// <sys/param.h> が存在する時定義されるマクロ
#cmakedefine HAVE_SYS_PARAM_H

// getrusage() が存在する時定義されるマクロ
#cmakedefine HAVE_GETRUSAGE

// times() が存在する時定義されるマクロ
#cmakedefine HAVE_TIMES

// UNIX の時 true となるマクロ
#cmakedefine YM_UNIX

// MAC OS-X の時 true となるマクロ
#cmakedefine YM_APPLE

// Windows の時 true となるマクロ
#cmakedefine YM_WIN32


//////////////////////////////////////////////////////////////////////
// 標準ヘッダファイルのインクルード
//////////////////////////////////////////////////////////////////////

#if defined(HAVE_STDLIB_H)
#include <stdlib.h>
#endif

#if defined(HAVE_STRING_H)
#include <string.h>
#endif

#if defined(HAVE_UNISTD_H)
#include <unistd.h>
#endif

#if defined(HAVE_LIMITS_H)
#include <limits.h>
#endif

#if defined(HAVE_FLOAT_H)
#include <float.h>
#endif

#if defined(HAVE_MATH_H)
#include <math.h>
#endif


//////////////////////////////////////////////////////////////////////
// サイズ固定の組み込み型
//////////////////////////////////////////////////////////////////////

#define SIZEOF_SHORT @SHORT_SIZE@
#define SIZEOF_INT @INT_SIZE@
#define SIZEOF_LONG @LONG_SIZE@
#define SIZEOF_LONG_LONG @LLONG_SIZE@

/// @brief 符号付き整数型
typedef int ymint;

/// @brief 符号なし整数型
typedef unsigned int ymuint;

/// @brief 符号付きlong型
typedef long int ymlong;

/// @brief 符号なしlong型
typedef unsigned long int ymulong;

/// @brief 符号付き8ビット整数型
typedef char ymint8;

/// @brief 符号なし8ビット整数型
typedef unsigned char ymuint8;

/// @brief 符号付き16ビット整数型
typedef @INT16_TYPE@ ymint16;

/// @brief 符号なし16ビット整数型
typedef @UINT16_TYPE@ ymuint16;

/// @brief 符号付き32ビット整数型
typedef @INT32_TYPE@ ymint32;

/// @brief 符号なし32ビット整数型
typedef @UINT32_TYPE@ ymuint32;

/// @brief 符号付き64ビット整数型
typedef @INT64_TYPE@ ymint64;

/// @brief 符号なし64ビット整数型
typedef @UINT64_TYPE@ ymuint64;

/// @brief ポインタと同サイズの符号なし整数型
typedef @PTRINT_TYPE@ ympuint;


//////////////////////////////////////////////////////////////////////
// その他の YmTools に共通な定義ファイルのインクルード
//////////////////////////////////////////////////////////////////////

#include "YmUtils/nsdef.h"
#include "YmUtils/stl.h"
#include "YmUtils/assert.h"

#endif // YMTOOLS_H
